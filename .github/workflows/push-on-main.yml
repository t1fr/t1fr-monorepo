name: Docker Image CI

on:
  push:
    branches:
      - "main"

permissions:
  actions: write
  contents: read
  packages: write

jobs:
  test-affected:
    name: 測試是否有專案變動，若無則取消此次 workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm add -g nx
      - name: 設定 NX affected 所需要的 base 跟 main 變數
        uses: nrwl/nx-set-shas@v4

      # 讓 CI 在 PR 時可以正常作用，必須執行
      - run: git branch --track main origin/main
        if: ${{ github.event_name == 'pull_request' }}

      - name: 測試 Affected，若無則取消 workflow
        run: |
          if [ -z $(nx show projects --affected) ]; then
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - "test-affected"
    name: 測試與建置
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - name: 設定 NX affected 所需要的 base 跟 main 變數
        uses: nrwl/nx-set-shas@v4

      # 讓 CI 在 PR 時可以正常作用，必須執行
      - run: git branch --track main origin/main
        if: ${{ github.event_name == 'pull_request' }}

      - name: 程式碼檢查 lint
        run: pnpm run lint:affect
        continue-on-error: true
      - name: 設置 Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 登入 GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 打包 Docker image 並推送到 GHCR
        run: INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} pnpm run container:affect
  deploy:
    name: 部屬
    needs:
      - "build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - name: 設定 NX affected 所需要的 base 跟 main 變數
        uses: nrwl/nx-set-shas@v4

      # 讓 CI 在 PR 時可以正常作用，必須執行
      - run: git branch --track main origin/main
        if: ${{ github.event_name == 'pull_request' }}

      # 建立部屬指令
      - name: 進入服務資料夾
        run: echo cd Documents/services >> scripts.txt
      - name: 建立遠端登入 GHCR 指令
        run: echo docker --config ./tmp login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io >> scripts.txt
      - name: 產生各專案部屬指令
        run: pnpm run deploy:affect
      - name: 部屬完畢後指令：移除無用 images
        run: echo docker image prune -af >> scripts.txt
      - run: cat ./scripts.txt
      # ssh 設定
      - run: mkdir -p ~/.ssh && ssh-keyscan 114.32.177.157 >> ~/.ssh/known_hosts
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: 在 KCL 機器執行部屬指令
        run: ssh -l "T1FR Server" 114.32.177.157 "bash -s" < scripts.txt
name: Action when main is pushed

on:
    push:
        branches:
            - "main"

env:
    DEPLOY_PATH: "t1fr"
    BASE_URL: "/"

permissions:
    actions: write
    contents: read
    packages: write

jobs:
    build:
        name: 測試與建置
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: 設置環境
              uses: ./.github/actions/setup-env

            - name: 程式碼檢查 lint
              run: pnpm run lint:affect
              continue-on-error: true
            - name: 建置
              run: pnpm run build:affect
            - name: 設置 Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                  platforms: linux/arm64
            - name: 登入 GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: 打包 Docker image 並推送到 GHCR
              run: INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} pnpm run container:affect
            - name: 上傳產物
              uses: actions/upload-artifact@v4
              with:
                  name: ${{env.DEPLOY_PATH}}
                  path: dist
    deploy:
        name: 部屬
        needs:
            - "build"
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: 設置環境
              uses: ./.github/actions/setup-env
            - name: 下載產物
              uses: actions/download-artifact@v4
              with:
                  name: ${{env.DEPLOY_PATH}}
                  path: dist
            # 建立部屬指令
            - name: 進入服務資料夾
              run: echo cd Documents/services >> scripts.txt
            - name: 進入服務資料夾
              run: echo security unlock-keychain -p ${{ secrets.SERVER_PASSWORD }} >> scripts.txt
            - name: 建立遠端登入 GHCR 指令
              run: echo docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io >> scripts.txt
            - name: 產生後端專案部屬指令
              run: pnpm run backend-deploy:affect
            - name: 部屬完畢後指令：移除無用 images
              run: echo docker image prune -af >> scripts.txt
            - run: cat ./scripts.txt
            # ssh 設定
            - run: mkdir -p ~/.ssh && ssh-keyscan 114.32.177.157 >> ~/.ssh/known_hosts
            - uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            - name: 在 KCL 機器執行部屬指令
              run: ssh t1fr_server@114.32.177.157 < scripts.txt
            - name: Setup rsync
              uses: GuillaumeFalourd/setup-rsync@v1.2
            - name: 部屬前端專案
              run: pnpm run frontend-deploy:affect
